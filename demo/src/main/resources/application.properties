### 配置jsp的位置
spring.mvc.view.prefix= /WEB-INF/jsp/
spring.mvc.view.suffix= .jsp

###配置静态文件的地址 以及url访问
# 默认值为 /**
#修改spring.mvc.static-path-pattern来修改默认的映射，例如我改成/dudu/**,
# 那运行的时候访问 http://lcoalhost:8080/dudu/index.html 才对应到index.html页面。
#spring.mvc.static-path-pattern=/dudu/**
spring.mvc.static-path-pattern=/**
#用逗号隔开
# 默认值为 classpath:/META-INF/resources/,classpath:/resources/,classpath:/static/,classpath:/public/
spring.resources.static-locations=classpath:/META-INF/resources/,classpath:/resources/,classpath:/static/,classpath:/public/

### 默认的logback开启 日志访问级别 TRACE < DEBUG < INFO < WARN < ERROR < FATAL
# 指定后不输出级别比它低的
#debug=true
#最低的级别,
#trace=true

### 将日志输出到文件 二者不能同时使用，如若同时使用，则只有logging.file生效
#日志文件的大小达到10MB时会切分一次，产生新的日志文件，默认级别为：ERROR、WARN、INFO
# 设置文件,可以是绝对路径也可是相对路径
#logging.file=/home/wxq/testSpringBoot.log
# 设置目录,,会在该目录下面创建spring.log文件,并写入日志内容
#logging.path=/home/wxq

## 为单个的子包或者父包设置 日志的级别 选项TRACE, DEBUG, INFO, WARN, ERROR, FATAL, OFF
# 格式为 logging.level.* , * 表示为包名或Logger名(就是类名)
#logging.level.com.test.demo.controller=DEBUG


### 配置外部的自定义的日志配置文件,可以使用其他的日志 ,不一定要用logback,
### 或者使用默认的日志名称 放在src/main/resources下面就可以了

#如果你想针对不同运行时Profile使用不同的日志配置，这个功能会很有用。
#logging.config=classpath:logging-config.xml

### 热加载,idea 在修改之后调用Ctrl+F9 或Ctrl+Alt+F9,然后让静态文件不进行热加载,默认是开启的.只是刷新浏览器
### 可以设置在修改某一个文件的时候触发这个加载,不用Ctrl+F9
### 也就是说导入了类依赖之后就可以用了

### 配置静态资源修改不重新启动,只是刷新浏览器
##默认情况下，更改/META-INF/maven, /META-INF/resources ,/resources ,/static ,/public 或/templates下的资源不会触发重启
#spring.devtools.restart.exclude=static/**,public/**

## 如果想保留默认配置,同时添加新的配置,可以使用
spring.devtools.restart.additional-exclude=my/**

#想观察classpath中的路径文件的变化,不在classpath内的path可以配置
#spring.devtools.restart.additional-paths=
#属性来增加到监视中，
#同时配置
#spring.devtools.restart.exclude=
#可以选择这些path的变化是导致restart还是live reload。

### 关闭自动重启
#spring.devtools.restart.enabled=false  #属性为false，可以关闭该特性

###使用一个触发文件
#设置
# spring.devtools.restart.trigger-file=
# 指向某个文件，只有更改这个文件时才触发自动重启。